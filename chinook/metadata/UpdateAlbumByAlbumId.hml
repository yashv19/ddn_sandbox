---
kind: ObjectType
version: v1
definition:
  name: UpdateColumnAlbumAlbumId
  description: Update the 'album_id' column in the 'album' collection
  fields:
    - name: set
      type: Int4!
      description: Set the column to this value
  graphql:
    typeName: chinook_UpdateColumnAlbumAlbumId
    inputTypeName: chinook_UpdateColumnAlbumAlbumIdInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: update_column_album_album_id
      fieldMapping:
        set:
          column:
            name: _set

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateColumnAlbumAlbumId
  permissions:
    - role: admin
      output:
        allowedFields:
          - set

---
kind: ObjectType
version: v1
definition:
  name: UpdateColumnAlbumArtistId
  description: Update the 'artist_id' column in the 'album' collection
  fields:
    - name: set
      type: Int4!
      description: Set the column to this value
  graphql:
    typeName: chinook_UpdateColumnAlbumArtistId
    inputTypeName: chinook_UpdateColumnAlbumArtistIdInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: update_column_album_artist_id
      fieldMapping:
        set:
          column:
            name: _set

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateColumnAlbumArtistId
  permissions:
    - role: admin
      output:
        allowedFields:
          - set

---
kind: ObjectType
version: v1
definition:
  name: UpdateColumnAlbumTitle
  description: Update the 'title' column in the 'album' collection
  fields:
    - name: set
      type: Varchar!
      description: Set the column to this value
  graphql:
    typeName: chinook_UpdateColumnAlbumTitle
    inputTypeName: chinook_UpdateColumnAlbumTitleInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: update_column_album_title
      fieldMapping:
        set:
          column:
            name: _set

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateColumnAlbumTitle
  permissions:
    - role: admin
      output:
        allowedFields:
          - set

---
kind: ObjectType
version: v1
definition:
  name: UpdateAlbumByAlbumIdUpdateColumns
  description: Update the columns of the 'album' collection
  fields:
    - name: albumId
      type: UpdateColumnAlbumAlbumId
      description: Update the 'album_id' column in the 'album' collection.
    - name: artistId
      type: UpdateColumnAlbumArtistId
      description: Update the 'artist_id' column in the 'album' collection.
    - name: title
      type: UpdateColumnAlbumTitle
      description: Update the 'title' column in the 'album' collection.
  graphql:
    typeName: chinook_UpdateAlbumByAlbumIdUpdateColumns
    inputTypeName: chinook_UpdateAlbumByAlbumIdUpdateColumnsInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: update_album_by_album_id_update_columns
      fieldMapping:
        albumId:
          column:
            name: album_id
        artistId:
          column:
            name: artist_id
        title:
          column:
            name: title

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateAlbumByAlbumIdUpdateColumns
  permissions:
    - role: admin
      output:
        allowedFields:
          - albumId
          - artistId
          - title

---
kind: ObjectType
version: v1
definition:
  name: UpdateAlbumByAlbumIdResponse
  description: Responses from the 'update_album_by_album_id' procedure
  fields:
    - name: affectedRows
      type: Int4!
      description: The number of rows affected by the mutation
    - name: returning
      type: "[Album!]!"
      description: Data from rows affected by the mutation
  graphql:
    typeName: chinook_UpdateAlbumByAlbumIdResponse
    inputTypeName: chinook_UpdateAlbumByAlbumIdResponseInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: update_album_by_album_id_response
      fieldMapping:
        affectedRows:
          column:
            name: affected_rows
        returning:
          column:
            name: returning

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateAlbumByAlbumIdResponse
  permissions:
    - role: admin
      output:
        allowedFields:
          - affectedRows
          - returning

---
kind: Command
version: v1
definition:
  name: UpdateAlbumByAlbumId
  outputType: UpdateAlbumByAlbumIdResponse!
  arguments:
    - name: keyAlbumId
      type: Int4!
    - name: postCheck
      type: AlbumBoolExp
      description: Update permission post-condition predicate over the 'album' collection
    - name: preCheck
      type: AlbumBoolExp
      description: Update permission pre-condition predicate over the 'album' collection
    - name: updateColumns
      type: UpdateAlbumByAlbumIdUpdateColumns!
  source:
    dataConnectorName: postgres
    dataConnectorCommand:
      procedure: update_album_by_album_id
    argumentMapping:
      keyAlbumId: key_album_id
      postCheck: post_check
      preCheck: pre_check
      updateColumns: update_columns
  graphql:
    rootFieldName: chinook_updateAlbumByAlbumId
    rootFieldKind: Mutation
  description: Update any row on the 'album' collection using the 'album_id' key

---
kind: CommandPermissions
version: v1
definition:
  commandName: UpdateAlbumByAlbumId
  permissions:
    - role: admin
      allowExecution: true

