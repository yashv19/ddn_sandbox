---
kind: ObjectType
version: v1
definition:
  name: UpdateColumnMediaTypeMediaTypeId
  description: Update the 'media_type_id' column in the 'media_type' collection
  fields:
    - name: set
      type: Int4!
      description: Set the column to this value
  graphql:
    typeName: chinook_UpdateColumnMediaTypeMediaTypeId
    inputTypeName: chinook_UpdateColumnMediaTypeMediaTypeIdInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: update_column_media_type_media_type_id
      fieldMapping:
        set:
          column:
            name: _set

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateColumnMediaTypeMediaTypeId
  permissions:
    - role: admin
      output:
        allowedFields:
          - set

---
kind: ObjectType
version: v1
definition:
  name: UpdateColumnMediaTypeName
  description: Update the 'name' column in the 'media_type' collection
  fields:
    - name: set
      type: Varchar
      description: Set the column to this value
  graphql:
    typeName: chinook_UpdateColumnMediaTypeName
    inputTypeName: chinook_UpdateColumnMediaTypeNameInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: update_column_media_type_name
      fieldMapping:
        set:
          column:
            name: _set

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateColumnMediaTypeName
  permissions:
    - role: admin
      output:
        allowedFields:
          - set

---
kind: ObjectType
version: v1
definition:
  name: UpdateMediaTypeByMediaTypeIdUpdateColumns
  description: Update the columns of the 'media_type' collection
  fields:
    - name: mediaTypeId
      type: UpdateColumnMediaTypeMediaTypeId
      description: Update the 'media_type_id' column in the 'media_type' collection.
    - name: name
      type: UpdateColumnMediaTypeName
      description: Update the 'name' column in the 'media_type' collection.
  graphql:
    typeName: chinook_UpdateMediaTypeByMediaTypeIdUpdateColumns
    inputTypeName: chinook_UpdateMediaTypeByMediaTypeIdUpdateColumnsInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: update_media_type_by_media_type_id_update_columns
      fieldMapping:
        mediaTypeId:
          column:
            name: media_type_id
        name:
          column:
            name: name

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateMediaTypeByMediaTypeIdUpdateColumns
  permissions:
    - role: admin
      output:
        allowedFields:
          - mediaTypeId
          - name

---
kind: ObjectType
version: v1
definition:
  name: UpdateMediaTypeByMediaTypeIdResponse
  description: Responses from the 'update_media_type_by_media_type_id' procedure
  fields:
    - name: affectedRows
      type: Int4!
      description: The number of rows affected by the mutation
    - name: returning
      type: "[MediaType!]!"
      description: Data from rows affected by the mutation
  graphql:
    typeName: chinook_UpdateMediaTypeByMediaTypeIdResponse
    inputTypeName: chinook_UpdateMediaTypeByMediaTypeIdResponseInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: update_media_type_by_media_type_id_response
      fieldMapping:
        affectedRows:
          column:
            name: affected_rows
        returning:
          column:
            name: returning

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateMediaTypeByMediaTypeIdResponse
  permissions:
    - role: admin
      output:
        allowedFields:
          - affectedRows
          - returning

---
kind: Command
version: v1
definition:
  name: UpdateMediaTypeByMediaTypeId
  outputType: UpdateMediaTypeByMediaTypeIdResponse!
  arguments:
    - name: keyMediaTypeId
      type: Int4!
    - name: postCheck
      type: MediaTypeBoolExp
      description: Update permission post-condition predicate over the 'media_type'
        collection
    - name: preCheck
      type: MediaTypeBoolExp
      description: Update permission pre-condition predicate over the 'media_type'
        collection
    - name: updateColumns
      type: UpdateMediaTypeByMediaTypeIdUpdateColumns!
  source:
    dataConnectorName: postgres
    dataConnectorCommand:
      procedure: update_media_type_by_media_type_id
    argumentMapping:
      keyMediaTypeId: key_media_type_id
      postCheck: post_check
      preCheck: pre_check
      updateColumns: update_columns
  graphql:
    rootFieldName: chinook_updateMediaTypeByMediaTypeId
    rootFieldKind: Mutation
  description: Update any row on the 'media_type' collection using the 'media_type_id' key

---
kind: CommandPermissions
version: v1
definition:
  commandName: UpdateMediaTypeByMediaTypeId
  permissions:
    - role: admin
      allowExecution: true

